@each $color, $value in $theme-colors {
  .alert-#{$color} {
    border-left: 5px solid map-get($theme-colors, $color) !important;

    @if $color == "marche" {
      background-color: $marche-light !important;
    }

    @if $color == "emploi" {
      background-color: $emploi-light !important;
    }

    @if $color == "communaute" {
      background-color: $communaute-light !important;
    }

    @if $color == "pilotage" {
      background-color: $pilotage-light !important;
    }

    @if $color == "success" {
      background-color: $success-lighter !important;
    }

    @if $color == "warning" {
      background-color: $warning-lighter !important;
    }

    @if $color == "danger" {
      background-color: $danger-lighter !important;
    }

    @if $color == "info" {
      background-color: $info-lightest !important;
    }

    @if $color == "important" {
      background-color: $important-lighter !important;
    }
  }

  .progress--#{$color} {

    .progress-bar {
      background-color: map-get($theme-colors, $color) !important;
    }


    @if $color == "marche" {
      background-color: $marche-light !important;
    }

    @if $color == "emploi" {
      background-color: $emploi-light !important;
    }

    @if $color == "communaute" {
      background-color: $communaute-light !important;
    }

    @if $color == "pilotage" {
      background-color: $pilotage-light !important;
    }

    @if $color == "success" {
      background-color: $success-light !important;
    }

    @if $color == "warning" {
      background-color: $warning-light !important;
    }

    @if $color == "danger" {
      background-color: $danger-light !important;
    }

    @if $color == "info" {
      background-color: $info-lighter !important;
    }

    @if $color == "important" {
      background-color: $important-lighter !important;
    }
  }
}

@mixin badge-outline-variant($bg) {
  color: $bg;
  border: 2px solid $bg;
  background-color: transparent;

  @at-root a#{&} {
    @include hover-focus() {
      color: color-yiq($bg);
      border: 2px solid darken($bg, 10%);
    }

    &:focus,
    &.focus {
      outline: 0;
      box-shadow: 0 0 0 $badge-focus-width rgba($bg, .5);
    }
  }
}


@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (width: w, height: h) {
      @each $size, $length in $sizes2 {
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
      }
    }
  }
}
