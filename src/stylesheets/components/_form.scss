.form-group {
  margin-bottom: map-get($spacers, 3);

  &.form-group-required > .form-label::after,
  &.form-group-required > label::after {
    content: " *";
    font-weight: 700;
    font-size: inherit;
  }
}

.form-row {
  @extend .row;
}

input.form-control {
  height: $input-height;

  &.form-control-sm {
    height: $input-height-sm;
  }

  &.form-control-lg {
    height: $input-height-lg;
  }

  &.form-control-xl {
    height: $input-height-xl;
  }
}

.input-group {
  input.form-control,
  .input-group-text,
  .btn {
    height: $input-height;
  }

  .btn > [class^="ri-"] {
    font-weight: $font-weight-medium;
    @extend .ri-1x;
  }

  &.input-group-sm {
    input.form-control,
    .input-group-text,
    .btn {
      height: $input-height-sm;
    }

    .btn > [class^="ri-"] {
      @extend .ri-sm;
    }
  }

  &.input-group-lg {
    input.form-control,
    .input-group-text,
    .btn {
      height: $input-height-lg;
    }

    .btn > [class^="ri-"] {
      font-weight: $font-weight-bold;
    }
  }

  &.input-group-xl {
    input.form-control,
    .input-group-text,
    .btn {
      height: $input-height-xl;
      border-radius: $border-radius-lg;
    }

    .btn > [class^="ri-"] {
      font-weight: $font-weight-bold;
    }
  }

  &.input-group-search {
    .form-control,
    .input-group-text,
    .select2-selection {
      border-color: $border-color !important;
    }

    .btn-ico span:not([class^="badge-"]) {
      text-decoration: none !important;
    }

    .select2-selection {
      border-right: 0 !important;
      background-image: none !important;
    }
  }
}

select.form-select {
  min-height: $input-height;

  &.form-select-sm {
    min-height: $input-height-sm;
  }

  &.form-select-lg {
    min-height: $input-height-lg;
  }

  &.form-select-xl {
    min-height: $input-height-xl;
    padding-top: $form-select-padding-y-xl;
    padding-bottom: $form-select-padding-y-xl;
    padding-left: $form-select-padding-x-xl;
  }
}

.input-group .input-group-text {
  height: $input-height;

  &.input-group-sm .input-group-text {
    height: $input-height-sm;
  }

  &.input-group-lg .input-group-text,
  &.input-group-lg .select2-container--bootstrap-5 .select2-selection--single {
    height: $input-height-lg;
  }

  &.input-group-xl .input-group-text,
  &.input-group-xl .select2-container--bootstrap-5 .select2-selection--single {
    height: $input-height-xl;
  }
}

.input-group > .form-control:not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
  border-left: 0;
  padding-left: 0;
}

.input-group > .form-control:not(:last-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback) {
  border-right: 0;
  padding-right: 0;
}

.form-group > label,
.input-group > label {
  @extend .form-label;
}

.form-check > label {
  line-height: $line-height-sm;
}

.input-group > .form-select:not(:first-child),
.input-group > .form-control:not(:first-child) {
  border-left: transparent;
  padding-left: 0;
}

fieldset:disabled .form-control,
.form-control:disabled,
select:disabled,
.form-control[readonly] {
  pointer-events: none;
  border-color: $input-border-color !important;
  color: $input-placeholder-color !important;
  opacity: 1 !important;
}

.form-control[readonly] {
  background-color: transparent;
}

select,
select.form-control {
  &:disabled {
    background: $form-select-disabled-bg $form-select-disabled-background;
  }
}

.input-group {
  .form-control {
    outline: 0 !important;
    box-shadow: none !important;
  }

  &:has(.form-control:focus) {
    outline-offset: 2px;
    outline: $blue 2px solid;
    border-radius: $input-border-radius;
  }

  &:has(.form-control:focus:not(:focus-visible)) {
    outline: 0;
  }

  &:has(.form-control:focus-visible) {
    outline-offset: 2px;
    outline: $blue 2px solid;
    border-radius: $input-border-radius;
  }

  &-append,
  &-prepend {
    .btn-link {
      border-top: $input-border-width solid $input-border-color;
      border-bottom: $input-border-width solid $input-border-color;
      border-right: $input-border-width solid $input-border-color;
    }
  }
}

.form-control::file-selector-button {
  font-weight: $font-weight-bold;
  border-color: transparent;
}

.form-control:hover:not(:disabled):not([readonly])::file-selector-button {
  color: $button-light;
}

.form-check {
  .form-check-input:disabled ~ .form-check-label,
  .form-check-input[disabled] ~ .form-check-label,
  .form-check-input.disabled ~ .form-check-label,
  .form-check-input:disabled ~ .form-text,
  .form-check-input[disabled] ~ .form-text,
  .form-check-input.disabled ~ .form-text {
    color: $disabled-color;
  }

  .form-check-input:disabled,
  .form-check-input[disabled],
  .form-check-input.disabled {
    border-color: $disabled-color;
  }

  .form-check-input:disabled:checked,
  .form-check-input[disabled]:checked,
  .form-check-input.disabled:checked {
    border-color: $disabled-color;
    background-color: $disabled-color;
  }
}

.form-switch {
  .form-check-input:disabled,
  .form-check-input[disabled],
  .form-check-input.disabled {
    border-color: $disabled-color;
    background-image: escape-svg($form-switch-bg-disabled-image);
  }

  .form-check-input:disabled:checked,
  .form-check-input[disabled]:checked,
  .form-check-input.disabled:checked {
    background-image: escape-svg($form-switch-checked-bg-image);
  }

  &.has-state-label {
    .form-check-label {
      &::before {
        content: attr(data-it-state-label-off);
        transition: $transition-base;
        font-size: $font-size-xs;
      }
    }

    .form-check-input:checked ~ .form-check-label {
      &::before {
        content: attr(data-it-state-label-on);
      }
    }
  }
}

.form-switch.form-switch-lg {
  min-height: 2.5em;
  padding-left: 4.5em;

  .form-check-input {
    height: 2em;
    width: 4em;
    margin-left: -4.5em;
  }

  .form-check-label {
    margin: 0.5em 0;
  }

  .form-check-input:checked,
  .form-check-input:disabled:checked,
  .form-check-input[disabled]:checked {
    background-image: escape-svg($form-switch-checked-bg-image-lg);
  }

  &.has-state-label {
    position: relative;
    min-height: 3.5em;

    .form-check-label {
      &::before {
        transition: $transition-base;
        color: $primary;
        content: attr(data-it-state-label-off);
        font-size: $font-size-xs;
        text-indent: 0;
        text-align: center;
        position: absolute;
        width: 5.5em;
        display: inline-block;
        left: 0;
        bottom: 0;
      }
    }

    .form-check-input:checked ~ .form-check-label {
      &::before {
        content: attr(data-it-state-label-on);
      }
    }
  }
}

.c-form {
  background-color: $white;
  border-radius: $border-radius-lg;
  border: 1px solid $border-color;
  padding: map-get($spacers, 3);

  @include media-breakpoint-up(lg) {
    padding: map-get($spacers, 4) map-get($spacers, 4) map-get($spacers, 3) map-get($spacers, 4);
  }

  legend {
    float: none;
    font-size: $h3-font-size;
    font-weight: $font-weight-medium;
  }

  hr {
    margin-top: 0;
    margin-bottom: map-get($spacers, 5);
  }

  &-conseil {
    position: relative;

    > div {
      position: relative;
      @extend .ps-3;
      @extend .mb-3;
      background-color: $white;
      color: $primary;
      font-size: $font-size-sm;
      line-height: $line-height-sm;

      &::before {
        display: block;
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 5px;
        border-radius: 5px 0 0 5px;
        background-color: $primary;
        transition: all 0.3s ease-in-out;
      }

      @include media-breakpoint-up(lg) {
        position: absolute;
        margin-top: map-get($spacers, 5);
      }

      p {
        line-height: $line-height-sm;
        margin-bottom: 0;

        + p {
          margin-top: map-get($spacers, 2);
        }
      }

      &.is-openable {
        @include media-breakpoint-up(lg) {
          line-height: $line-height-base;
          overflow: hidden;
          text-overflow: ellipsis;
          display: -webkit-box;
          max-height: $input-height;
          -webkit-line-clamp: 2;
          -webkit-box-orient: vertical;
        }
      }
    }
  }

  &-uploaded-img-list {
    @extend .list-unstyled;

    > li {
      @extend .mb-3;

      div {
        @extend .align-items-center;

        > *:nth-child(2) {
          @extend .flex-grow-1;
          @extend .mx-3;
        }
      }
    }

    &__btn-img {
      background-color: transparent;
      background-position: center center;
      background-size: cover;
    }

    &__viewzone {
      display: flex;
    }

    &__editzone {
      display: none;
    }
  }
}
